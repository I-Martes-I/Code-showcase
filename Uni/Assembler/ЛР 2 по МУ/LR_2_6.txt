            AREA    DATA, DATA, READWRITE 
            AREA    PROGRAM, CODE, READONLY     	
            ENTRY                               	
            ALIGN                               ; ????????? ?? ????? (4 ?????)

Reset_Handler
			LDR R0, = 0x20000000		; адрес, в который загружается 2х-байтовое число
			LDR R1, = 0x20000010		; адрес, в который загружаются результаты умножения на 2 в сетепени n 
			LDR R3, = 5        		; степень двойки n (от 0 до 5) 		
			LDR R5, = 0x2 	        	; загружаем значение "2" в регистр, чтобы можно было воспользоваться командой MULS
			
                        LDR R2, = 0xABCD                ; заданное 2х-байтовое число      
			REV R2, R2
 			STR R2, [R0]
			LDR R4, [R0]

                        CMP R3, #6                      ; проверяем, удовлетворяет ли степень условию n < 6
                        BPL Stop                        ; если условие не выполняется, выходим из программы

			CMP R3, #0                      ; проверяем, равна ли степень двойки 0 (n = 0)
			BNE loop                        ; переходим по метке, если степень двойки больше 0 (n > 0)
			STR R4, [R1]                    ; иначе загружаем заданное 2х-байтовое число в R1 
			B Stop                          ; завершаем программу
loop		
			REV R4, R4
			MULS R4, R5, R4                 ; умножение 2х-байтового числа на 2
			REV R4, R4
			STR R4, [R1]                    ; загружаем результат умножения в R1
			ADDS R1, R1, #4	                ; увеличиваем адрес на 4 байта
			SUBS R3, R3, #1	                ; уменьшаем степень двойки на единицу		
			CMP R3, #0	                ; сравниваем результат вычитания с 0			
			BNE loop                        
			BEQ Stop			
Stop
            B      Stop     	

            AREA    RESET, DATA, READONLY ; ???????? ?? ???????????? ???????? ??????????
            EXPORT  Vectors         ; ??????? ????? Vectors ??? ????????????
Vectors
            DCD     0x20004000      ; ?????? ????? (????????? ????? ???)
            DCD     Reset_Handler   ; ?????? ?????? (?????? ?????????)

            END 